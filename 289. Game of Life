Time complexity: O(mn)
Space complexity: O(1)
Did this code submitted successfully on leetcode: Yes

class Solution {
    public void gameOfLife(int[][] board) {
        //1. What happens if at 0
        //2. What happens if at 1
        //3. Count neighbours (We will write a function for this)
        
        //Edge case
        if(board==null || board.length==0)
            return;
        
        int m=board.length, n=board[0].length;
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                
                int count=countActive(board,i,j,m,n);
                
                if(board[i][j]==0 && count==3){
                    board[i][j]=3;
                }else if(board[i][j]==1 && (count<2 || count>3)){
                    board[i][j]=5;
                }
            }  
        }
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]==5)
                    board[i][j]=0;
                else if(board[i][j]==3)
                    board[i][j]=1;
            }
        }
        
        return;
    }
    
    private int countActive(int[][] board, int x, int y, int m, int n){
        
        int count=0;
        int[][] dirs = new int[][]{{-1,1},{1,-1},{1,1},{-1,-1},{-1,0},{1,0},{0,-1},{0,1}};
        
        for(int[] dir:dirs){
            int r= x+dir[0];
            int c= y+dir[1];
            
            if(r>=0 && r<m && c>=0 && c<n && (board[r][c]==1 || board[r][c]==5))
                count++;
        }
        return count;
    }
}
