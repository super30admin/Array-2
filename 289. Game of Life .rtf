{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;}
\margl1440\margr1440\vieww9680\viewh6580\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
class Solution:\
    def gameOfLife(self, board: List[List[int]]) -> None:\
        """\
        Do not return anything, modify board in-place instead.\
        """\
        \
        col = len(board[0])\
        row = len(board)\
        \
        def countNeighbors(r, c) :\
            nei = 0\
            for i in range(r - 1, r + 2):\
                for j in range(c - 1, c + 2):\
                    if ((i==r and j==c) or i < 0 or j < 0 or i == row or j == col):\
                        continue\
                    if board[i][j] in [1, 3]:\
                        nei += 1\
\
            return nei\
        \
        for i in range(row):\
            for j in range(col):\
                \
                cnt = countNeighbors(i, j)\
                \
                if board[i][j] == 1:\
                    if cnt < 2 or cnt > 3:\
                        board[i][j] = 3\
                else:\
                    if cnt == 3:\
                        board[i][j] = 2\
        for i in range(row):\
            for j in range(col):\
                if board[i][j] == 3:\
                    board[i][j] = 0\
                if board[i][j] == 2:\
                    board[i][j] = 1\
                    \
        \
        }