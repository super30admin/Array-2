// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
      
      List<Integer> result  = new ArrayList<>();
      
      /* edge case */ 
      if(nums == null || nums.length == 0)
          return result;
    
      /*iterate over all the values of the array */
      for ( int i : nums)
      {
          /* get the value and make the value negative at (value -1) index */
          if(nums[Math.abs(i) -1] > 0) 
              nums[Math.abs(i) -1] *= -1;
      }
    
    /* if the value is positive at any index then that index +1 value is not present in the array */
     for(int i = 0; i< nums.length;i++)
         if(nums[i]> 0) 
             result.add(i+1);
     
        return result; /* return result */
    }
}