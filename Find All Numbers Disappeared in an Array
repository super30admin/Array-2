// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no


// Your code here along with comments explaining your approach


class Solution(object):
    def findDisappearedNumbers(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        result=[]
        if(nums==None or len(nums)==0):
            return result
        for i in range(len(nums)):
            if(nums[abs(nums[i])-1]>0):
                nums[abs(nums[i])-1]=nums[abs(nums[i])-1]*-1
        for j in range(len(nums)):
            if(nums[j]>0):
                result.append(j+1)
        return result
