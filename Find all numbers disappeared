// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No
// Your code here along with comments explaining your approach: Here we will iterate from first element in the array till the end. The length of the array is the maximum element in it. While iterating through it, whenever we come across an element, we multiply the index equal to that number with -1. 
//After we finish iterating through the array, only the missing number indices will be positive.

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        
List<Integer> result=new ArrayList<>();
int n=nums.length;
        for(int i=0;i<n;i++)
        {
            if((nums[Math.abs(nums[i])-1])>0)
            {
                nums[Math.abs(nums[i])-1]*=-1;
            }
        }

        for(int i=1;i<=n;i++)
        {
            if(nums[i-1]>0)
            {
                result.add(i);
            }
        }

        return result;
    }
}