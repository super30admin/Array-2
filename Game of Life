class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int rows = board.size();
        int cols = board[0].size();
        // 0 -->1-- 2
        // 1-->0 -- 3
        int count;
        for(int i =0; i< rows; i++){
            for(int j=0; j<cols; j++){
                
                int count = neighbors(board,i,j);
                if(board[i][j]== 1 || board[i][j]== 3){
                    if(count<2){
                        board[i][j]= 3;
                    }
                    else if(count>3){
                        board[i][j]=3;
                    }
                    else{
                        board[i][j] =1;
                    }
                }
                else{
                    if(count == 3){
                        board[i][j] = 2;
                    }
                }
            }
        }
            
            for(int i =0; i< rows; i++){
            for(int j=0; j<cols; j++){
                
                if(board[i][j]==2 ){
                    board[i][j]=1;
                } 
                else if(board[i][j]==3){
                    board[i][j]=0;
                }
            }
            }
            
            
        }
    
    int neighbors( vector<vector<int>>& board, int row, int col){
        int dir[8][2]={{-1,-1},{-1,0},{-1,1},{0,-1},{0,1},{1,-1},{1,0},{1,+1}};
        int nr,nc;
        int counter =0;
        for( auto i : dir){
            nr = row + i[0];
            nc = col + i[1];
            if(nc >= 0 && nr>= 0 && nr< board.size() && nc<board[0].size() && ( board[nr][nc] == 1 || board[nr][nc] == 3 ))
            {
                counter++;
            }
            }
    return counter;
    }
    };
