/*
TC: O(mn) we are iterating each element in matrix and checking their neightbors for lives
SC: O(1) we are modifying the array and then again getting back its state.
 */
class GameOfLife{
    public void gameOfLife(int[][] board) {
        if (board == null || board.length ==0) return;
        int m = board.length; int n = board[0].length;

        for (int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                int count = getCount(board, i, j);
                if (board[i][j] == 1 && (count < 2 || count > 3)){
                    board[i][j] = 2;
                }
                if(board[i][j] == 0 && count == 3){
                    board[i][j] = 3;
                }
            }
        }

        for (int i = 0; i < m; i++){
            for (int j = 0; j < n; j++){
                if (board[i][j] == 2){
                    board[i][j] = 0;
                }
                if (board[i][j] == 3){
                    board[i][j] = 1;
                }
            }
        }
    }

    private int getCount(int[][] board, int i, int j){
        int directions[][] = {{0,1},{0,-1},{-1,0},{1,0},{-1,-1},{-1,1},{1,-1},{1,1}};
        int count = 0;
        for (int dir[] : directions){
            int p = i + dir[0];
            int q = j + dir[1];
            if (p >= 0 && q >= 0 && p < board.length && q < board[0].length && (board[i][j] ==1 || board[i][j] == 2) ){
                count++;
            }
        }

        return count;
    }
}