//time O(n)
//Space O(1)
// leetcode yes
//problem no

/* we maintain 2 variables which store current max and current min. initialise them to first element of the array. Now for every
element we first check with current max, if it is greater then we update current max. Else if it is smaller , we check with 
current min and update it accordingly.

*/

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    
    
	public static void main (String[] args) {
	    
	    int[] arr = {3,2,1,56,10000,167};
	    int currMin = arr[0];
	    int currMax = arr[0];
	     
	     for(int i=1;i<arr.length;i++)
	     {
	         if(arr[i] > currMax)
	            currMax = arr[i];
	         else if ( arr[i] < currMax)
	         {  
	             if(arr[i]< currMin)
	                currMin = arr[i];
	             
	         }
	           
	         
	     }
	     System.out.println("Min:"+ currMin + " " + "Max:" + currMax);
	    
		
	}
}
