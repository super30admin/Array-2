
// Time Complexity : O(2n) -> O(n)
// Space Complexity : O(1) - > no extra space.
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No


// Your code here along with comments explaining your approach : Used '-' as a identifier to a particular index value of the number in the array, to understand if that element is
                                                                 present. Iterate over the array again and check if there is a positive number, then add that position value to the array.

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> result = new ArrayList<Integer>();
        for(int i=0;i<nums.length;i++){
            int num= Math.abs(nums[i]);
            if(nums[num-1]<0){
                continue;
            }
            else{
                nums[num-1]=-nums[num-1];
              }
        }
        for(int i=0;i<nums.length;i++){
            if(nums[i]>0){
                 result.add(i+1);
            }
      }
        
        return result;
        
    }
}
