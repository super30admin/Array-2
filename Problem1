class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> result = new ArrayList<>();
        //Edge case , if input array is empty
        if(nums == null || nums.length == 0) return result;
        
        // Iterate through the array and add '-' to the number-1 index
        for(int i = 0 ; i < nums.length ; i++){
            int index = Math.abs(nums[i])-1;
            if(nums[index] > 0){
                nums[index] *= -1;
            }
        }
        
        // Retrieve all indexes with positive elements
        for(int i = 0 ; i < nums.length ; i++){
            if(nums[i] > 0){
                result.add(i+1);
            }
        }
            
        // Additional code to return to original state of input array
        
        for(int i = 0 ; i < nums.length ; i++){
            if(nums[i] < 0){
                nums[i] *= -1;
            }
        }
        return result;
    }
}
// Time complexity - O(n) + O(n) = O(n)  , Space complexity = 1
