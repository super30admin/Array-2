// Time Complexity :O(n*m)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No


class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int n=board.size(),m=board[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                int cnt = cal(board,i,j,n,m);
                if(board[i][j]==1 && (cnt<2 || cnt>3))
                {
                    board[i][j]=2;
                }
                else if(board[i][j]== 0 && cnt==3)
                {
                    board[i][j]=3;
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(board[i][j]==3 )
                    board[i][j]=1;
                else if(board[i][j]==2)
                    board[i][j]=0;
                    
            }
        }
    }
    
    int cal(vector<vector<int>> &board, int i,int j,int n,int m)
    {
        vector<vector<int>> x{{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1},{-1,-1}};
        int cnt=0;
        for(int ii=0;ii<8;ii++)
        {
            int p=i + x[ii][0];
            int q=j+ x[ii][1];
            
            if(p>=0 && p<n && q>=0 && q<m && (board[p][q]==1 || board[p][q]==2))
            {
                cnt++;
            }
        }
        return cnt;
    }
};
