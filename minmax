// Time Complexity :O(n*m)
// Space Complexity : O(1)
// Did this code successfully run on Local Compilor : Yes
// Any problem you faced while coding this : No

#include<bits/stdc++.h>
using namespace std;

class solution {

  public: vector<int> getMinMax(vector<int> &arr)
	{
		vector<int> temp(2); //min is stored at 0 loaction,max at 1 location
		
		int n=arr.size(),i=0;
		if(n%2!=0)
		{
			i=1;
			temp[0]=arr[0];
			temp[1]=arr[0];
		}
		else
		{
			i=2;
			temp[0] = min(arr[0],arr[1]);
			temp[1]=max(arr[0],arr[1]);
		}
	
		//comparing two elements, and then finding comparing the min and max of these 2 elements with min and max in temp	
		for( i;i<arr.size();i+=2)
		{
			if(arr[i]<arr[i+1])
			{
				if(temp[0]>arr[i])
				{
					temp[0]=arr[i];
				}
				if(temp[1]<arr[i+1])
				{
					temp[1]=arr[i+1];
				}
			}
			else
			{
				if(temp[0]>arr[i+1])
				{
					temp[0]=arr[i+1];
				}
				if(temp[1]<arr[i])
				{
					temp[1]=arr[i];
				}
			}
		}
		
		return temp;
	}
};
int main() 
{ 
    solution s;
    vector<int> arr { 1000, 11, 445, 1, 330, 3000}; 
    
    vector<int> minmax = s.getMinMax(arr); 
     
    cout << "nMinimum element is "
        << minmax[0] << endl; 
    cout << "nMaximum element is "
        << minmax[1]; 
         
    return 0; 
} 
 
