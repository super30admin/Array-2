class Solution {
    int m;
    int n;
    int[][] dirs;
    public void gameOfLife(int[][] board) {
     m=board.length;
        n=board[0].length;
        
        if(board==null || m==0){
            return;
        }
        dirs=new int[][]{{0,1},{1,0},{1,1},{0,-1},{-1,0},{-1,-1},{1,-1},{-1,1}};
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int countLive=count_Live(board,i,j);
                if(board[i][j]==1 &&(countLive<2 || countLive>3)){
                    board[i][j]=3;
                }
              if(board[i][j]==0 && countLive==3){
                  board[i][j]=2;
              }  
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]==3){
                    board[i][j]=0;
                } if(board[i][j]==2){
                    board[i][j]=1;
                }
            }
        }
 
        
    }
    public int count_Live(int[][] board,int row,int col){
        int count=0;
        
        for(int[] dir:dirs){
            int nr=row+dir[0];
            int nc=col+dir[1];
        if(nr>=0 && nc<n && nr<m && nc>=0){
            if(board[nr][nc]==1 || board[nr][nc]==3){
                count++;
            }
        }
        }
        return count;
    }
}
